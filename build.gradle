plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'idea'
}

group = 'com.gh'
version = 'v1'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    // security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // oauth2
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // mail
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    // JPA API (Jakarta)
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0' // Updated JPA dependency
    implementation 'org.hibernate:hibernate-core:6.2.12.Final' // Updated Hibernate version for Jakarta

    // QueryDSL dependencies updated for Jakarta
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'

    // jwt
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
    implementation group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
    implementation group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'

    // jackson
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    // logback
    implementation 'ch.qos.logback:logback-classic:1.5.6'
    implementation 'ch.qos.logback:logback-core:1.5.6'

    // selenium
    implementation 'org.seleniumhq.selenium:selenium-java:4.23.1'

    // MariaDB
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

    compileOnly 'javax.annotation:javax.annotation-api:1.3.2'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

jar {
    enabled = false
}

// Vite 빌드 후 정적 파일 복사 작업
task copyViteBuild(type: Copy) {
    from "${projectDir}/src/main/front/dist" // Vite 빌드 경로
    into "${projectDir}/src/main/resources/static" // Spring Boot 정적 파일 경로
}

// Vite 빌드 작업
task buildVite(type: Exec) {
    workingDir "${projectDir}/src/main/front" // Vite 프로젝트 경로
    commandLine 'npm', 'run', 'build' // Vite 빌드 명령어
}

// 전체 빌드 시 Vite 빌드 작업 실행
build.dependsOn(buildVite)

// copyViteBuild 작업이 processResources의 입력으로 사용되도록 설정
tasks.named('processResources') {
    dependsOn(copyViteBuild) // processResources 작업 전에 copyViteBuild 작업 실행
}

bootJar {
    dependsOn(copyViteBuild) // bootJar 작업 전에 copyViteBuild 작업 실행
}